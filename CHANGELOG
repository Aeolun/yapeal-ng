2011-07-11

(trunk/) Updated WalletTransactions for new journalTransactionID field that was
add. Thanks for the heads up on that CCP :P

(trunk/) Replaced config/cacert.pem with new config/eveonline.crt to see if
it'll work better for people. The old file had general certs for all CAs vs new
one has just the chain needed for Eve APIs. Hopefully this will reduce the
number of errors being seen.

2011-04-19

(trunk/) Fixed for issue 71 where transactions involving 2 wallets in the same
corporation would only show once in DB table when corporation is buying and
selling stuff to itself etc do to table primary key not including accountKey.

2011-04-11

(trunk/) Updated cache/char/CharacterSheet.xsd to reflect change in skills
rowset from using 'unpublished' to using 'published'.

(trunk/) Updated install/char.xml to reflect change from 'unpublished' to
'published'.

(trunk/) Updated class/api/charCharacterSheet.php for change from 'unpublished'
to 'published'.

(trunk/) Updated many of the class/api/*.php files to take advantage of the new
insert only functionality of class/YapealQueryBuilder.php.

(trunk/) Add pics/Yapeal-256x80.png contributed by Eonra.

(branches/cloud/) Saving some work done.

2011-02-26

(trunk/) Changed default for proxy in A*::getProxy() to use https.

(trunk/) Relaxed curl timing to allow it the time it needs to fully check certs.

(trunk/) Updated cache/char/Medals.xsd to allow for same medal being rewarded
more than once.

(trunk/) Updated cache/char/Medals.xsd so second <rowset/> for otherCorporations
is allowed.

(trunk/) Fixed minor formatting problem in per class constructors.

2011-02-21

(trunk/) Updated AccountStatus.xsd to allow for GTC offers.

2011-02-19

(trunk/) Take out some old test messages that had mistakenly been left in
WalletJournal and WalletTransactions API classes.

2011-02-17

Fixed an interdependency between class/api/A*.php and the per api instance
classes where error messages in constructors on parent were dependent on
$this->api which was defined in child but dependent on $this->section from
parent. The error message never are actually used in Yapeal since section file
always passed correct params but could have tripped up anyone trying to modify
or replace them.

(branches/incursion/) Merged in branches/https/ changes.

2011-02-05

(branches/https/) Made changes to convert Yapeal to use https. HTTP proxies will
no longer work with Yapeal but HTTPS proxies should. Future versions will allow
for per user/char/corp configuring of certificate file to use for now
self-signed ones need to be either added to config/cacert.pem or replace it if
using proxy for all conections.

(branches/incursion/) Merged some changes from trunk/ into incrusion branch like
the fix for issue 65 and issue 66.

(trunk/) Changed all references to eve-online.com over to eveonline.com as first
step in getting ready for https conversion.

(trunk/) Merged in change from branches/incrusion/ for bad hash that was being
used in class/YapealApiCache.php.

Users should clear thier XML cache(s) file, database, or both depending on which
they use. Linux users can clear thier file cache by doing the following:

rm -R cache/*.xml

Windows users can select the XML files (not XSDs) on a folder by folder basis
and delete them from the cache/* folders.

All users will also need to clear the utilXMLCache database table using:
truncate utilXMLCache;

Another try at fully fixing issue 65.

2011-02-04

(branches/incursion/) Fixed bug in class/YapealApiCache.php where hash being
used wasn't always unique for all cached XML files because the owner was not
being included in it.

Users should clear thier XML cache(s) file, database, or both depending on which
they use. Linux users can clear thier file cache by doing the following:

rm -R cache/*.xml

Windows users can select the XML files (not XSDs) on a folder by folder basis
and delete them from the cache/* folders.

All users will also need to clear the utilXMLCache database table using:
truncate utilXMLCache;

2011-01-31

(branches/incursion/) Changed all references to eve-online.com over to
eveonline.com as first step in getting ready for https conversion.

2011-01-27

(branches/incursion/) Copied over some of the changes from WalletJournal into
WalletTransactions as well.

2011-01-25

(branches/incursion/) Made several changes to WalletJournal for char and corp to
work better with new caching. Starting with I pulled in revision 1146 fix from
trunk/.

Fixed error where corp APIs were check char cachedUntil times in utilCachedUntil.
This was a nasty little bug that took a while to spot in class/SectionCorp.php.
It should cut down on a few API errors plus get corp APIs at correct times again.

2011-01-24

(branches/incursion/) Updated corp/, eve/, map/, and /server/ XSDs to do more
checks on the XML. Can now catch more error cases.

2011-01-23

(branches/incursion/) Updated account/ and char/ XSDs to do more checks on the
XML. Can now catch more error cases. Work is continuing on doing the same for
the others.

2011-01-22

Branched trunk/ to work on some additions/fixes for Incursion.

(branches/incursion/) Added option to YapealQueryBuilder::store() to allow pure
insert instead of just upsert.

Actually committed possible fix for (issue 65). Sorry it didn't get put out a
couple days ago like I thought it had.

Added fix for 'bad behaviour with limited key requesting fullkey apipages'
(issue 66)

2011-01-15

Fixed error message when install/createMySQLTables.php was run without parameters.

2011-01-11 (rev 1137)

Did some code cleanup on class/ADODB_Exception.php

Cleared out some old code that was used when trying to make install/*.php
scripts run in CGI.

Did some updates to DocBlocks to move classes into correct subpackages.

Updated copyright (c) to reflect 2011.

Added check in class/api/AChar.php and ACorp.php to insure that new cacheUntil
returned during API errors conditions is always in the future. In some cases
with API errors 101, 103, 115-117, 119 the new cachedUntil date/time can be in
the past which caused repeated tries to get API before servers are ready.

2011-01-10 (rev 1136)

Added new utilGraphic table and removed graphic and graphicType columns from
utilRegisteredCharacter and utilRegisteredCorporation tables. New class to
manage table can be found in class/util/Graphic.php

Removed corporationID and corporationName from utilRegisteredCharacter as it was
not needed and could cause record mismatches with both utilRegisteredCorporation
and accountCharacters tables. I'm try to really optimize the util* tables as
Yapeal spends most of it's time accessing them. I've been considering remove the
name columns from character and corporation as well but feel that the small
improvements in speed seen does not seems to warrant make manual table
management that much more difficult.

Updated all the install/*.xml to use ENGINE = InnoDB in <opt> instead of the
varies versions with different case and spacing.

Made changes to several of the scripts in install/ to make them more user
friendly for anyone using them for manual install from archives or SVN.

Updated README and added new INSTALL file with instructions for installing
Yapeal manually.

Changed name of INSTALL to INSTALL.txt because one OS (Windows c$!p) can't
figure out how to use case differences to tell files apart from directories.

2011-01-09 (rev 1136)

Adding this changelog in hopes that I might actually use it.

Replaced constant YAPEAL_MAX_UPSERT with class constant
YapealQueryBuilder::MAX_UPSERT.

YapealApiCache::cacheXml() now handles adding some randomness to the cachedUntil
date/time stored in utilCachedUntil table. This randomness use to be decided in
CachedUntil::cacheExpired() but it was felt that with new system for coming up
with cachedUntil using cachedInterval table and ignoring cachedUntil from API
server the old system of randomly decided to delay getting the API was wasteful
of database resources. The random delay can now be pre-calculated and added to
the stored value instead. This should also make designing a service to replace
running yapeal.php from crontab easier.

Added new static methods getList() and setKeep() to YapealErrorHandler class.
These new methods will let application developers to turn on an internal logging
of all errors triggered while Yapeal is running. They can then access the list
and display or otherwise use it however they choose. Care should be taken when
using this as the list can become very large quickly in cases where Yapeal is
misconfigured or API servers return lots of errors.

Fixed mixed line endings in ext/eac_httprequest/ files which caused Yapeal to
fail without any errors when trying to get XML from APIs for some developers.

Updated usage() in yapeal.php to reflect -d command line optional no longer
available.
