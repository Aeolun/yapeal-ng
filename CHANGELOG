2011-02-05

(trunk/) Changed all references to eve-online.com over to eveonline.com as first
step in getting ready for https conversion.

(trunk/) Merged in change from branches/incrusion/ for bad hash that was being
used in class/YapealApiCache.php.

Users should clear thier XML cache(s) file, database, or both depending on which
they use. Linux users can clear thier file cache by doing the following:

rm -R cache/*.xml

Windows users can select the XML files (not XSDs) on a folder by folder basis
and delete them from the cache/* folders.

All users will also need to clear the utilXMLCache database table using:
truncate utilXMLCache;

Another try at fully fixing issue 65.

2011-01-25

Fixed error where corp APIs were check char cachedUntil times in utilCachedUntil.
This was a nasty little bug that took a while to spot in class/SectionCorp.php.
It should cut down on a few API errors plus get corp APIs at correct times again.

2011-01-22

Actually committed possible fix for (issue 65). Sorry it didn't get put out a
couple days ago like I thought it had.

Added fix for 'bad behaviour with limited key requesting fullkey apipages'
(issue 66)

2011-01-15

Fixed error message when install/createMySQLTables.php was run without parameters.

2011-01-11 (rev 1137)

Did some code cleanup on class/ADODB_Exception.php

Cleared out some old code that was used when trying to make install/*.php
scripts run in CGI.

Did some updates to DocBlocks to move classes into correct subpackages.

Updated copyright (c) to reflect 2011.

Added check in class/api/AChar.php and ACorp.php to insure that new cacheUntil
returned during API errors conditions is always in the future. In some cases
with API errors 101, 103, 115-117, 119 the new cachedUntil date/time can be in
the past which caused repeated tries to get API before servers are ready.

2011-01-10 (rev 1136)

Added new utilGraphic table and removed graphic and graphicType columns from
utilRegisteredCharacter and utilRegisteredCorporation tables. New class to
manage table can be found in class/util/Graphic.php

Removed corporationID and corporationName from utilRegisteredCharacter as it was
not needed and could cause record mismatches with both utilRegisteredCorporation
and accountCharacters tables. I'm try to really optimize the util* tables as
Yapeal spends most of it's time accessing them. I've been considering remove the
name columns from character and corporation as well but feel that the small
improvements in speed seen does not seems to warrant make manual table
management that much more difficult.

Updated all the install/*.xml to use ENGINE = InnoDB in <opt> instead of the
varies versions with different case and spacing.

Made changes to several of the scripts in install/ to make them more user
friendly for anyone using them for manual install from archives or SVN.

Updated README and added new INSTALL file with instructions for installing
Yapeal manually.

Changed name of INSTALL to INSTALL.txt because one OS (Windows c$!p) can't
figure out how to use case differences to tell files apart from directories.

2011-01-09 (rev 1136)

Adding this changelog in hopes that I might actually use it.

Replaced constant YAPEAL_MAX_UPSERT with class constant
YapealQueryBuilder::MAX_UPSERT.

YapealApiCache::cacheXml() now handles adding some randomness to the cachedUntil
date/time stored in utilCachedUntil table. This randomness use to be decided in
CachedUntil::cacheExpired() but it was felt that with new system for coming up
with cachedUntil using cachedInterval table and ignoring cachedUntil from API
server the old system of randomly decided to delay getting the API was wasteful
of database resources. The random delay can now be pre-calculated and added to
the stored value instead. This should also make designing a service to replace
running yapeal.php from crontab easier.

Added new static methods getList() and setKeep() to YapealErrorHandler class.
These new methods will let application developers to turn on an internal logging
of all errors triggered while Yapeal is running. They can then access the list
and display or otherwise use it however they choose. Care should be taken when
using this as the list can become very large quickly in cases where Yapeal is
misconfigured or API servers return lots of errors.

Fixed mixed line endings in ext/eac_httprequest/ files which caused Yapeal to
fail without any errors when trying to get XML from APIs for some developers.

Updated usage() in yapeal.php to reflect -d command line optional no longer
available.
